/*
 * generated by Xtext 2.9.1
 */
grammar InternalDroneScript;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package hu.bme.mit.inf.kortargyalo.drones.behavior.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.mit.inf.kortargyalo.drones.behavior.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import hu.bme.mit.inf.kortargyalo.drones.behavior.xtext.services.DroneScriptGrammarAccess;

}
@parser::members {
	private DroneScriptGrammarAccess grammarAccess;

	public void setGrammarAccess(DroneScriptGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDronesBehavior
entryRuleDronesBehavior
:
{ before(grammarAccess.getDronesBehaviorRule()); }
	 ruleDronesBehavior
{ after(grammarAccess.getDronesBehaviorRule()); } 
	 EOF 
;

// Rule DronesBehavior
ruleDronesBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getGroup()); }
		(rule__DronesBehavior__Group__0)
		{ after(grammarAccess.getDronesBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignal
entryRuleSignal
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignalAccess().getNameAssignment()); }
		(rule__Signal__NameAssignment)
		{ after(grammarAccess.getSignalAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScript
entryRuleScript
:
{ before(grammarAccess.getScriptRule()); }
	 ruleScript
{ after(grammarAccess.getScriptRule()); } 
	 EOF 
;

// Rule Script
ruleScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScriptAccess().getGroup()); }
		(rule__Script__Group__0)
		{ after(grammarAccess.getScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequence
entryRuleSequence
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceAccess().getGroup()); }
		(rule__Sequence__Group__0)
		{ after(grammarAccess.getSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleWait
entryRuleSimpleWait
:
{ before(grammarAccess.getSimpleWaitRule()); }
	 ruleSimpleWait
{ after(grammarAccess.getSimpleWaitRule()); } 
	 EOF 
;

// Rule SimpleWait
ruleSimpleWait 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleWaitAccess().getGroup()); }
		(rule__SimpleWait__Group__0)
		{ after(grammarAccess.getSimpleWaitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexWait
entryRuleComplexWait
:
{ before(grammarAccess.getComplexWaitRule()); }
	 ruleComplexWait
{ after(grammarAccess.getComplexWaitRule()); } 
	 EOF 
;

// Rule ComplexWait
ruleComplexWait 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexWaitAccess().getGroup()); }
		(rule__ComplexWait__Group__0)
		{ after(grammarAccess.getComplexWaitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReaction
entryRuleReaction
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionAccess().getGroup()); }
		(rule__Reaction__Group__0)
		{ after(grammarAccess.getReactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendSignal
entryRuleSendSignal
:
{ before(grammarAccess.getSendSignalRule()); }
	 ruleSendSignal
{ after(grammarAccess.getSendSignalRule()); } 
	 EOF 
;

// Rule SendSignal
ruleSendSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendSignalAccess().getGroup()); }
		(rule__SendSignal__Group__0)
		{ after(grammarAccess.getSendSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCooperate
entryRuleCooperate
:
{ before(grammarAccess.getCooperateRule()); }
	 ruleCooperate
{ after(grammarAccess.getCooperateRule()); } 
	 EOF 
;

// Rule Cooperate
ruleCooperate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCooperateAccess().getGroup()); }
		(rule__Cooperate__Group__0)
		{ after(grammarAccess.getCooperateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharge
entryRuleCharge
:
{ before(grammarAccess.getChargeRule()); }
	 ruleCharge
{ after(grammarAccess.getChargeRule()); } 
	 EOF 
;

// Rule Charge
ruleCharge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChargeAccess().getGroup()); }
		(rule__Charge__Group__0)
		{ after(grammarAccess.getChargeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScan
entryRuleScan
:
{ before(grammarAccess.getScanRule()); }
	 ruleScan
{ after(grammarAccess.getScanRule()); } 
	 EOF 
;

// Rule Scan
ruleScan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScanAccess().getGroup()); }
		(rule__Scan__Group__0)
		{ after(grammarAccess.getScanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendMap
entryRuleSendMap
:
{ before(grammarAccess.getSendMapRule()); }
	 ruleSendMap
{ after(grammarAccess.getSendMapRule()); } 
	 EOF 
;

// Rule SendMap
ruleSendMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendMapAccess().getGroup()); }
		(rule__SendMap__Group__0)
		{ after(grammarAccess.getSendMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePosition
entryRulePosition
:
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionAccess().getGroup()); }
		(rule__Position__Group__0)
		{ after(grammarAccess.getPositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
		(rule__DOUBLE__Group__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualifiedName
ruleQualifiedName 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

rule__DronesBehavior__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getGroup_2_0()); }
		(rule__DronesBehavior__Group_2_0__0)
		{ after(grammarAccess.getDronesBehaviorAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getScriptsAssignment_2_1()); }
		(rule__DronesBehavior__ScriptsAssignment_2_1)
		{ after(grammarAccess.getDronesBehaviorAccess().getScriptsAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
		ruleSequence
		{ after(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleWaitParserRuleCall_1()); }
		ruleSimpleWait
		{ after(grammarAccess.getStatementAccess().getSimpleWaitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getComplexWaitParserRuleCall_2()); }
		ruleComplexWait
		{ after(grammarAccess.getStatementAccess().getComplexWaitParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMoveParserRuleCall_3()); }
		ruleMove
		{ after(grammarAccess.getStatementAccess().getMoveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSendSignalParserRuleCall_4()); }
		ruleSendSignal
		{ after(grammarAccess.getStatementAccess().getSendSignalParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCooperateParserRuleCall_5()); }
		ruleCooperate
		{ after(grammarAccess.getStatementAccess().getCooperateParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getChargeParserRuleCall_6()); }
		ruleCharge
		{ after(grammarAccess.getStatementAccess().getChargeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getScanParserRuleCall_7()); }
		ruleScan
		{ after(grammarAccess.getStatementAccess().getScanParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSendMapParserRuleCall_8()); }
		ruleSendMap
		{ after(grammarAccess.getStatementAccess().getSendMapParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group__0__Impl
	rule__DronesBehavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getScenarioKeyword_0()); }
	'scenario'
	{ after(grammarAccess.getDronesBehaviorAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group__1__Impl
	rule__DronesBehavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getScenarioAssignment_1()); }
	(rule__DronesBehavior__ScenarioAssignment_1)
	{ after(grammarAccess.getDronesBehaviorAccess().getScenarioAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getAlternatives_2()); }
	(rule__DronesBehavior__Alternatives_2)*
	{ after(grammarAccess.getDronesBehaviorAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DronesBehavior__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group_2_0__0__Impl
	rule__DronesBehavior__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getSignalKeyword_2_0_0()); }
	'signal'
	{ after(grammarAccess.getDronesBehaviorAccess().getSignalKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group_2_0__1__Impl
	rule__DronesBehavior__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getSignalsAssignment_2_0_1()); }
	(rule__DronesBehavior__SignalsAssignment_2_0_1)
	{ after(grammarAccess.getDronesBehaviorAccess().getSignalsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getGroup_2_0_2()); }
	(rule__DronesBehavior__Group_2_0_2__0)*
	{ after(grammarAccess.getDronesBehaviorAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DronesBehavior__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group_2_0_2__0__Impl
	rule__DronesBehavior__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getCommaKeyword_2_0_2_0()); }
	','
	{ after(grammarAccess.getDronesBehaviorAccess().getCommaKeyword_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DronesBehavior__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDronesBehaviorAccess().getSignalsAssignment_2_0_2_1()); }
	(rule__DronesBehavior__SignalsAssignment_2_0_2_1)
	{ after(grammarAccess.getDronesBehaviorAccess().getSignalsAssignment_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Script__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__0__Impl
	rule__Script__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
	'script'
	{ after(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__1__Impl
	rule__Script__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getDroneAssignment_1()); }
	(rule__Script__DroneAssignment_1)
	{ after(grammarAccess.getScriptAccess().getDroneAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getStatementAssignment_2()); }
	(rule__Script__StatementAssignment_2)
	{ after(grammarAccess.getScriptAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getSequenceAction_0()); }
	()
	{ after(grammarAccess.getSequenceAccess().getSequenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__2__Impl
	rule__Sequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getStatementsAssignment_2()); }
	(rule__Sequence__StatementsAssignment_2)*
	{ after(grammarAccess.getSequenceAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleWait__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleWait__Group__0__Impl
	rule__SimpleWait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleWaitAccess().getWaitKeyword_0()); }
	'wait'
	{ after(grammarAccess.getSimpleWaitAccess().getWaitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleWait__Group__1__Impl
	rule__SimpleWait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleWaitAccess().getSignalAssignment_1()); }
	(rule__SimpleWait__SignalAssignment_1)
	{ after(grammarAccess.getSimpleWaitAccess().getSignalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleWait__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleWaitAccess().getGroup_2()); }
	(rule__SimpleWait__Group_2__0)?
	{ after(grammarAccess.getSimpleWaitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleWait__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleWait__Group_2__0__Impl
	rule__SimpleWait__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleWaitAccess().getTimeoutKeyword_2_0()); }
	'timeout'
	{ after(grammarAccess.getSimpleWaitAccess().getTimeoutKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleWait__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleWaitAccess().getTimeoutAssignment_2_1()); }
	(rule__SimpleWait__TimeoutAssignment_2_1)
	{ after(grammarAccess.getSimpleWaitAccess().getTimeoutAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexWait__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__0__Impl
	rule__ComplexWait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getComplexWaitAction_0()); }
	()
	{ after(grammarAccess.getComplexWaitAccess().getComplexWaitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__1__Impl
	rule__ComplexWait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getWaitKeyword_1()); }
	'wait'
	{ after(grammarAccess.getComplexWaitAccess().getWaitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__2__Impl
	rule__ComplexWait__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getGroup_2()); }
	(rule__ComplexWait__Group_2__0)?
	{ after(grammarAccess.getComplexWaitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__3__Impl
	rule__ComplexWait__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getComplexWaitAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__4__Impl
	rule__ComplexWait__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getReactionsAssignment_4()); }
	(rule__ComplexWait__ReactionsAssignment_4)*
	{ after(grammarAccess.getComplexWaitAccess().getReactionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__5__Impl
	rule__ComplexWait__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getGroup_5()); }
	(rule__ComplexWait__Group_5__0)?
	{ after(grammarAccess.getComplexWaitAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getComplexWaitAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexWait__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group_2__0__Impl
	rule__ComplexWait__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getTimeoutKeyword_2_0()); }
	'timeout'
	{ after(grammarAccess.getComplexWaitAccess().getTimeoutKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getTimeoutAssignment_2_1()); }
	(rule__ComplexWait__TimeoutAssignment_2_1)
	{ after(grammarAccess.getComplexWaitAccess().getTimeoutAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexWait__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group_5__0__Impl
	rule__ComplexWait__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getOnKeyword_5_0()); }
	'on'
	{ after(grammarAccess.getComplexWaitAccess().getOnKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group_5__1__Impl
	rule__ComplexWait__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getTimeoutKeyword_5_1()); }
	'timeout'
	{ after(grammarAccess.getComplexWaitAccess().getTimeoutKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexWait__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexWaitAccess().getOnTimeoutAssignment_5_2()); }
	(rule__ComplexWait__OnTimeoutAssignment_5_2)
	{ after(grammarAccess.getComplexWaitAccess().getOnTimeoutAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__0__Impl
	rule__Reaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getReactionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__1__Impl
	rule__Reaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getSignalAssignment_1()); }
	(rule__Reaction__SignalAssignment_1)
	{ after(grammarAccess.getReactionAccess().getSignalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getStatementAssignment_2()); }
	(rule__Reaction__StatementAssignment_2)
	{ after(grammarAccess.getReactionAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getMoveAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getDestinationAssignment_2()); }
	(rule__Move__DestinationAssignment_2)
	{ after(grammarAccess.getMoveAccess().getDestinationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendSignal__Group__0__Impl
	rule__SendSignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendSignalAccess().getSendKeyword_0()); }
	'send'
	{ after(grammarAccess.getSendSignalAccess().getSendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendSignal__Group__1__Impl
	rule__SendSignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendSignalAccess().getSignalAssignment_1()); }
	(rule__SendSignal__SignalAssignment_1)
	{ after(grammarAccess.getSendSignalAccess().getSignalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendSignal__Group__2__Impl
	rule__SendSignal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendSignalAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getSendSignalAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendSignal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendSignalAccess().getRecipentAssignment_3()); }
	(rule__SendSignal__RecipentAssignment_3)
	{ after(grammarAccess.getSendSignalAccess().getRecipentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cooperate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooperate__Group__0__Impl
	rule__Cooperate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooperate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCooperateAccess().getCooperateKeyword_0()); }
	'cooperate'
	{ after(grammarAccess.getCooperateAccess().getCooperateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooperate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cooperate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooperate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCooperateAccess().getRoleAssignment_1()); }
	(rule__Cooperate__RoleAssignment_1)
	{ after(grammarAccess.getCooperateAccess().getRoleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Charge__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Charge__Group__0__Impl
	rule__Charge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Charge__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChargeAccess().getChargeAction_0()); }
	()
	{ after(grammarAccess.getChargeAccess().getChargeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Charge__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Charge__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Charge__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChargeAccess().getChargeKeyword_1()); }
	'charge'
	{ after(grammarAccess.getChargeAccess().getChargeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scan__Group__0__Impl
	rule__Scan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScanAccess().getScanAction_0()); }
	()
	{ after(grammarAccess.getScanAccess().getScanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scan__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScanAccess().getScanKeyword_1()); }
	'scan'
	{ after(grammarAccess.getScanAccess().getScanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendMap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendMap__Group__0__Impl
	rule__SendMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendMapAccess().getSendKeyword_0()); }
	'send'
	{ after(grammarAccess.getSendMapAccess().getSendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendMap__Group__1__Impl
	rule__SendMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendMapAccess().getMapKeyword_1()); }
	'map'
	{ after(grammarAccess.getSendMapAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendMap__Group__2__Impl
	rule__SendMap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendMapAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getSendMapAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendMap__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendMapAccess().getRecipentAssignment_3()); }
	(rule__SendMap__RecipentAssignment_3)
	{ after(grammarAccess.getSendMapAccess().getRecipentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__0__Impl
	rule__Position__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getXAssignment_0()); }
	(rule__Position__XAssignment_0)
	{ after(grammarAccess.getPositionAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__1__Impl
	rule__Position__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getPositionAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__2__Impl
	rule__Position__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getYAssignment_2()); }
	(rule__Position__YAssignment_2)
	{ after(grammarAccess.getPositionAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__3__Impl
	rule__Position__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getPositionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getZAssignment_4()); }
	(rule__Position__ZAssignment_4)
	{ after(grammarAccess.getPositionAccess().getZAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getGroup_2()); }
	(rule__DOUBLE__Group_2__0)?
	{ after(grammarAccess.getDOUBLEAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_2__0__Impl
	rule__DOUBLE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DronesBehavior__ScenarioAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getScenarioScenarioCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDronesBehaviorAccess().getScenarioScenarioQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDronesBehaviorAccess().getScenarioScenarioQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDronesBehaviorAccess().getScenarioScenarioCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__SignalsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getSignalsSignalParserRuleCall_2_0_1_0()); }
		ruleSignal
		{ after(grammarAccess.getDronesBehaviorAccess().getSignalsSignalParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__SignalsAssignment_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getSignalsSignalParserRuleCall_2_0_2_1_0()); }
		ruleSignal
		{ after(grammarAccess.getDronesBehaviorAccess().getSignalsSignalParserRuleCall_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DronesBehavior__ScriptsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDronesBehaviorAccess().getScriptsScriptParserRuleCall_2_1_0()); }
		ruleScript
		{ after(grammarAccess.getDronesBehaviorAccess().getScriptsScriptParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__DroneAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getDroneDroneCrossReference_1_0()); }
		(
			{ before(grammarAccess.getScriptAccess().getDroneDroneQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getScriptAccess().getDroneDroneQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getScriptAccess().getDroneDroneCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getStatementSequenceParserRuleCall_2_0()); }
		ruleSequence
		{ after(grammarAccess.getScriptAccess().getStatementSequenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceAccess().getStatementsStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getSequenceAccess().getStatementsStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__SignalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleWaitAccess().getSignalSignalCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSimpleWaitAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSimpleWaitAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSimpleWaitAccess().getSignalSignalCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleWait__TimeoutAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleWaitAccess().getTimeoutINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSimpleWaitAccess().getTimeoutINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__TimeoutAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexWaitAccess().getTimeoutINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getComplexWaitAccess().getTimeoutINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__ReactionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexWaitAccess().getReactionsReactionParserRuleCall_4_0()); }
		ruleReaction
		{ after(grammarAccess.getComplexWaitAccess().getReactionsReactionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexWait__OnTimeoutAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexWaitAccess().getOnTimeoutStatementParserRuleCall_5_2_0()); }
		ruleStatement
		{ after(grammarAccess.getComplexWaitAccess().getOnTimeoutStatementParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__SignalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getSignalSignalCrossReference_1_0()); }
		(
			{ before(grammarAccess.getReactionAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReactionAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getReactionAccess().getSignalSignalCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getReactionAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__DestinationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getDestinationPositionParserRuleCall_2_0()); }
		rulePosition
		{ after(grammarAccess.getMoveAccess().getDestinationPositionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__SignalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendSignalAccess().getSignalSignalCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSendSignalAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSendSignalAccess().getSignalSignalQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSendSignalAccess().getSignalSignalCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__RecipentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendSignalAccess().getRecipentDroneCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSendSignalAccess().getRecipentDroneQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSendSignalAccess().getRecipentDroneQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSendSignalAccess().getRecipentDroneCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cooperate__RoleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCooperateAccess().getRoleRoleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCooperateAccess().getRoleRoleQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getCooperateAccess().getRoleRoleQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCooperateAccess().getRoleRoleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendMap__RecipentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendMapAccess().getRecipentDroneCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSendMapAccess().getRecipentDroneQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSendMapAccess().getRecipentDroneQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSendMapAccess().getRecipentDroneCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getXDOUBLEParserRuleCall_0_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getPositionAccess().getXDOUBLEParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getYDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getPositionAccess().getYDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__ZAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getZDOUBLEParserRuleCall_4_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getPositionAccess().getZDOUBLEParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
